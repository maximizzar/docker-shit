version: '3.8'

services:
  broker:
    container_name: 'redis'
    image: 'registry.ipv6.docker.com/library/redis:7'
    restart: 'unless-stopped'
    volumes:
      - '/opt/redis/data:/data'
  db:
    container_name: 'postgres'
    environment:
      POSTGRES_DB: 'paperless'
      POSTGRES_USER: 'paperless'
      POSTGRES_PASSWORD: 'paperless'
    image: 'registry.ipv6.docker.com/library/postgres:13'
    restart: 'unless-stopped'
    volumes:
      - '/var/lib/postgresql/data:/var/lib/postgresql/data'
  webserver:
    container_name: 'paperless-ngx'
    depends_on:
      - db
      - broker
    env_file: 'docker-compose.env'
    environment:
      PAPERLESS_REDIS: 'redis://broker:6379'
      PAPERLESS_DBHOST: 'db'
    healthcheck:
      test: [ 'CMD', 'curl', '-fs', '-S', '--max-time', '2', 'http://localhost:8000']
      interval: 30s
      timeout: 10s
      retries: 5
    image: 'registry.ipv6.docker.com/paperlessngx/paperless-ngx:latest'
    ports:
      - '127.0.0.1:8080:8000'
    restart: 'unless-stopped'
    volumes:
      - '/mnt/documents/paperless/data:/usr/src/paperless/data'
      - '/mnt/documents/paperless/media:/usr/src/paperless/media'
      - '/mnt/documents/paperless/export:/usr/src/paperless/export'
      - '/mnt/documents/paperless/consume:/usr/src/paperless/consume'
  watchtower:
    container_name: 'watchtower'
    environment:
      TZ: 'UTC'
      WATCHTOWER_CLEANUP: true
      WATCHTOWER_REMOVE_VOLUMES: false
      WATCHTOWER_INCLUDE_RESTARTING: true
      WATCHTOWER_INCLUDE_STOPPED: true
      WATCHTOWER_REVIVE_STOPPED: true
      WATCHTOWER_POLL_SCHEDULE: '0 30 3 * * *'
      WATCHTOWER_TIMEOUT: 16
    image: 'registry.ipv6.docker.com/containrrr/watchtower:latest'
    network_mode: 'bridge'
    restart: 'unless-stopped'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'